#!/bin/bash

set -euo pipefail

if [ $# -lt 1 ]; then
    echo "Usage: $0 <regex> [<string> ...]"
    exit 1
fi

pattern="$1"
shift

if [ -t 1 ]; then
    RED=$(tput setaf 1)
    GREEN=$(tput setaf 2)
    BRIGHT=$(tput bold)
    DIM=$(tput dim)
    RESET=$(tput sgr0)
else
    RED=
    GREEN=
    BRIGHT=
    DIM=
    RESET=
fi

len() {
    echo "${DIM}(len ${#1})${RESET}"
}

process() {
    local text="$1"
    local i

    if [[ "$text" =~ $pattern ]]; then
        echo "  ${BRIGHT}${GREEN}MATCH${RESET}: '$text' $(len "${text}")"
        for (( i=0; i<${#BASH_REMATCH[@]}; i++ )); do
            echo "    ${GREEN}[$i]${RESET}: '${BASH_REMATCH[i]}' $(len "${BASH_REMATCH[i]}")"
        done
        return 0
    else
        echo "${BRIGHT}${RED}NOMATCH${RESET}: '$text' $(len "${text}")"
        return 1
    fi
}

echo "${BRIGHT}PATTERN${RESET}: '$pattern' $(len "${pattern}")"

IFS=
ret=0

if [ $# = 0 ]; then
    while read -r -p "> " text; do
        process "$text" || ret=1
    done
    [ -t 0 ] && echo
else
    for text in "$@"; do
        process "$text" || ret=1
    done
fi

exit $ret
